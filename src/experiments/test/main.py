from src.indexes.laion1.indexes import benchmark, indexes, indexes_names
from src.datasets.laion1.dataset import name
from src.common.scorer import Scorer

import matplotlib.pyplot as plt

what = 'url'
x = (0.01688,-0.04114,0.000623,-0.02895,0.001363,-0.02505,0.0385,0.02368,0.006058,-0.02272,0.01878,0.001721,0.001013,-0.0591,0.04382,-0.0179,0.02435,0.01566,0.001005,0.02676,-0.0316,-0.02837,0.04007,-0.0903,-0.0523,0.01396,0.03085,0.0326,0.0418,0.01105,0.0208,-0.01791,-0.01749,0.01903,-0.07404,0.01174,0.03394,-0.003426,0.0129,0.1411,-0.05658,-0.05185,-0.02797,0.002602,0.001371,-0.0589,-0.01497,-0.00672,-0.011536,-0.0682,-0.001456,0.0305,0.0408,-0.02458,-0.0003448,0.005005,-0.05063,0.0934,0.005173,0.005142,0.02625,-0.00546,-0.0087,-0.0425,-0.02052,-0.04996,0.03244,0.00655,0.01436,0.04285,0.00501,-0.01092,-0.02989,0.00766,-0.02045,-0.0375,-0.0753,-0.0239,-0.0325,-0.02342,-0.0359,-0.02538,0.003592,-0.08093,0.03668,0.02815,0.0864,-0.02449,0.04498,0.02812,-0.0141,-0.02672,-0.5723,0.0906,-0.04785,-0.0004878,-0.0172,-0.0805,-0.151,0.0691,-0.0423,-0.01927,-0.0462,0.04214,0.003067,0.0668,-0.11005,-0.01106,-0.0837,-0.0234,0.01543,-0.01707,0.02716,0.006855,0.01726,0.05203,-0.02675,-0.02301,0.02867,0.001771,0.06775,0.02965,0.009224,0.01093,0.02177,-0.01404,-0.01436,0.03357,-0.0472,-0.03687,0.03888,0.02216,-0.0717,0.0846,-0.004875,-0.01445,0.05908,0.01342,-0.0495,-0.0359,0.02545,-0.010704,0.01231,0.04495,-0.00804,0.02527,0.002453,0.02095,-0.0003505,0.03036,0.01404,-0.01704,-0.0348,-0.0442,-0.005753,0.01145,-0.0546,0.000701,-0.0368,-0.01299,-0.03333,-0.00979,-0.05362,-0.02972,0.0464,-0.02885,-0.0425,0.0344,0.01264,0.04547,-0.02023,0.03015,-0.04758,-0.03976,-0.05023,-0.01312,-0.03232,-0.0391,-0.010254,0.007133,-0.02834,0.04706,-0.01808,-0.00791,-0.044,-0.03354,0.00854,-0.01371,-0.01653,0.01616,0.0187,-0.0156,0.03955,-0.01014,-0.0184,0.00237,0.00912,-0.02823,-0.02458,0.00948,0.01074,-0.00447,-0.002762,0.03607,-0.0302,0.00693,0.01704,-0.00929,0.0306,-0.003159,-0.05377,-0.001118,0.01395,0.02373,-0.02577,-0.003222,0.0324,0.02066,0.0803,-0.01967,0.0248,0.0289,0.004734,-0.00452,0.04657,0.01743,0.01539,-0.006344,0.04193,-0.004883,-0.02315,-0.01994,0.02078,0.1063,0.02318,0.00611,-0.003433,-0.001754,0.001159,-0.0565,0.04758,-0.01855,-0.02904,-0.0564,-0.03488,-0.001363,-0.002312,-0.0371,0.0008726,0.005066,0.007042,-0.0451,0.01452,-0.01057,0.05658,0.02742,-0.05612,-0.05066,0.0531,-0.01772,-0.014465,0.00623,-0.02766,-0.0427,0.02406,0.01794,-0.02597,-0.0557,0.013336,0.0201,-0.0315,-0.0229,0.02211,0.01923,-0.02902,0.0188,0.00458,0.0345,-0.02608,0.02542,0.02086,-0.00423,-0.03128,-0.01079,0.0341,0.02899,-0.00953,-0.0471,-0.007553,0.01715,-0.0899,0.0457,-0.02654,0.00512,0.01962,-0.03284,0.0523,-0.004345,0.01493,0.0186,-0.03284,-0.00528,0.00113,-0.001093,-0.02745,0.006405,0.0324,-0.00383,0.03653,-0.01883,-0.05185,-0.03485,0.0844,-0.03897,0.004517,-0.02036,-0.03087,0.05246,-0.03436,0.00481,0.0211,0.0787,-0.003328,-0.02177,0.04373,-0.0532,0.09625,0.0477,0.0417,-0.02032,0.03024,-0.0281,0.014336,0.02824,0.02815,-0.0449,0.03543,0.01233,-0.01678,-0.0893,-0.007477,-0.01235,-0.00801,0.01365,-0.01054,-0.0346,0.001923,-0.0495,0.002104,-0.01526,-0.05246,0.01255,0.0883,-0.0815,-0.012276,0.0487,-0.01462,-0.04953,-0.007366,0.01581,0.06635,-0.01736,0.01332,0.00669,-0.11664,-0.02046,0.02283,-0.0285,-0.02815,-0.003742,0.0355,0.04874,-0.08234,-0.02336,-0.0273,-0.0502,0.1677,0.01127,-0.0433,-0.000842,0.005962,-0.008766,-0.04785,0.0315,-0.0321,0.04526,-0.05066,-0.0546,-0.02058,-0.01563,-0.02954,-0.0689,0.003357,0.01043,0.01987,-0.02492,0.008736,-0.0377,-0.04544,-0.02211,-0.04077,-0.014595,0.02982,0.04645,-0.011765,0.01069,-0.04715,-0.04007,0.0749,-0.0328,0.01994,0.04898,-0.02762,0.005802,-0.01997,-0.00402,-0.00328,-0.01111,-0.0346,-0.07117,-0.0539,0.009865,0.06024,0.01009,0.01585,-0.005413,0.02707,-0.04166,0.03656,0.000892,0.0133,0.05386,0.02084,-0.03333,-0.002825,0.004074,-0.0004323,-0.0001403,0.0323,-0.00484,0.02698,0.00915,-0.01607,0.00914,0.01515,0.0008907,-0.01677,-0.03552,0.002365,-0.01116,-0.0488,-0.015076,-0.02043,0.01477,-0.0556,-0.02542,-0.013985,0.01456,-0.0269,-0.002426,-0.015205,0.03555,-0.01563,-0.01225,-0.003716,0.01807,-0.02792,-0.004574,0.002901,0.00986,0.04556,-0.03418,-0.02982,0.02074,-0.004585,-0.012115,-0.03525,-0.0251,-0.004696,-0.03055,0.01027,-0.06128,-0.02528,0.01035,-0.00915,0.04373,0.01538,0.05298,-0.0675,-0.05273,-0.006344,-0.0215,0.013466,-0.0398,0.04434,0.03244,0.02322,0.01164,0.033,0.03183,0.0459,0.00989,0.002953,-0.01425,-0.01292,-0.0175,0.0451,-0.0242,0.01174,0.04996,-0.001786,0.01281)
distance = 1.66

names = ['IVF16Flat_laion1']
times, results = benchmark.SelectFromTables(names, what, x, distance)

scorer = Scorer(results[name])
scores_arr = []
scores_arr.append(1.0)
for n in indexes_names:
    scores_arr.append(scorer.GetIntersectionScore(results[n]))

times_arr = []
times_arr.append(times[name])
for n in indexes_names:
    times_arr.append(times[n])

names = [name] + indexes_names

fig = plt.figure(figsize=(15, 5))
plt.bar(names, scores_arr)
plt.title('Сравнения intersection accuracy')
fig.savefig('output/laion1/accuracy.png')

fig = plt.figure(figsize=(15, 5))
plt.bar(names, times_arr)
plt.title('Сравнение времени SELECT запроса')
plt.ylabel('с')
fig.savefig('output/laion1/select.png')
